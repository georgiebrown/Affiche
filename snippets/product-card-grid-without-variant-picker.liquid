{% comment %}
    Renders a product card using "Grid" style
    Accepts:
    - max_height: {Number} Maximum height of the product's image (required)
    - product: {Object} Product Liquid object (required)
    - show_vendor: {Boolean} Show the product's vendor depending on the section setting (optional)

    Usage:
    {% include 'product-card-grid', max_height: max_height, product: product, show_vendor: section.settings.show_vendor %}
{% endcomment %}
{% assign has_multiple_variants = false %}
{% if product.variants.size > 1 %}
  {% assign has_multiple_variants = true %}
{% endif %}

{% assign has_multiple_options = false %}
{% if product.options.size > 1 %}
  {% assign has_multiple_options = true %}
{% endif %}


<div class="grid-view-item{% unless product.available %} grid-view-item--sold-out{% endunless %} product-card">
  <a class="grid-view-item__link grid-view-item__image-container full-width-link" href="{{ product.url | within: collection }}">
    <span class="visually-hidden">{{ product.title }}</span>
  </a>

  {% capture img_id %}ProductCardImage-{{ section.id }}-{{ product.id }}{% endcapture %}
  {% capture wrapper_id %}ProductCardImageWrapper-{{ section.id }}-{{ product.id }}{% endcapture %}
  {%- assign preview_image = product.featured_media.preview_image -%}
  {%- assign img_url = preview_image | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

  {% unless preview_image == blank %}
    {% include 'image-style', image: preview_image, height: max_height, wrapper_id: wrapper_id, img_id: img_id %}
  {% endunless %}

  <div class="product-card__image-with-placeholder-wrapper" data-image-loading-animation>
    <div id="{{ wrapper_id }}" class="grid-view-item__image-wrapper product-card__image-wrapper js">
      <div style="padding-top:{% unless preview_image == blank %}{{ 1 | divided_by: preview_image.aspect_ratio | times: 100 }}%{% else %}100%{% endunless %};">
        <img id="{{ img_id }}"
              class="grid-view-item__image lazyload"
              alt="{{ preview_image.alt }}"
              data-src="{{ img_url }}"
              data-widths="[180, 360, 540, 720, 900, 1080, 1296, 1512, 1728, 2048]"
              data-aspectratio="{{ preview_image.aspect_ratio }}"
              data-sizes="auto"
              data-image>
      </div>
    </div>
  </div>

  <noscript>
    {% capture image_size %}{{ max_height }}x{{ max_height }}{% endcapture %}

   <div class="variant-images slides js-slides">
    {% for image in product.images %}
      <div class="variant-image single-image {% if forloop.index > 0 %}{{ image.variants.first.title }}{% endif %}" {% if image.attached_to_variant? %} data-variant="{{ image.variants.first.id }}" {% endif  %} id=" {% if forloop.index > 0 %}{{ image.variants.first.title }}{% endif %}">
        <img src="{{ image.src | img_url: 'large' }}" alt="{{ image.alt | escape }}">
      </div>
    {% endfor %}
   </div>

  </noscript>

  <div class="h4 grid-view-item__title product-card__title" aria-hidden="true">{{ product.title }}</div>
  <div class="shop-button"><p class="white">{{ 'collections.button.shop' | t}}</p></div>


</div>


<script>


(function() {

   // your page initialization code here
   // the DOM will be available here
var variantImages =  document.querySelector('.variant-images');
var variantImage = document.querySelectorAll('.variant-image');
  
var colourButton = document.querySelector('.option-color');
var colourButtonValue = colourButton.value;
console.log(colourButton);


colourButton.addEventListener('click', (event) => {
  var colourClickValue = event.value;
  variantImage.forEach(image => image.style.display="none");

  var selectedColourImage = variantImages.getElementsByClassName(colourClickValue);
  var selectedColourImageItem = (selectedColourImage[0]);
  selectedColourImageItem.style.display = "block";
});

})();


  
</script>
